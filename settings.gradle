/*
 * Copyright 2019 SIA Joom
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def isDevelopment = properties['development'].toBoolean()
includeBuild('colonist') {
  if (isDevelopment) {
    dependencySubstitution {
      substitute module('com.joom.colonist:colonist-annotations') using project(':annotations')
      substitute module('com.joom.colonist:colonist-processor') using project(':processor')
      substitute module('com.joom.colonist:colonist-core') using project(':core')
      substitute module('com.joom.colonist:colonist-gradle-plugin') using project(':gradle-plugin')
    }
  }
}

include ':colonist-samples:sample-java'
include ':colonist-samples:sample-kotlin'
include ':colonist-samples:modular-android:modular-api'
include ':colonist-samples:modular-android:modular-app'
include ':colonist-samples:modular-android:modular-colony'

def featuresString = properties['enabledFeatures']?.toString() ?: ""
def features = featuresString.tokenize(",")
for (feature in features) {
  include ":colonist-samples:modular-android:modular-$feature"
}

include ":colonist-samples:modular-java:modular-java-app"
include ":colonist-samples:modular-java:modular-colony"
include ":colonist-samples:modular-java:modular-colony-api"
include ":colonist-samples:modular-java:modular-settlers"
